/** Base91 is how the server communicates to the client */
export class Base91 {
    data: string;
    offset: number;

    constructor(data: string, offset: number) {
        if (offset === void 0) {
            offset = 0;
        }
        this.data = data;
        this.offset = offset;
    }

    static bytes(str: string, count: number) {
        let result = 0;
        let factor = 1;
        for (let i = 0; i < count; i++) {
            result += factor * Base91.DEC_TABLE[str.charCodeAt(i)];
            factor *= 0x5b;
        }
        return result;
    }
    hasMore() {
        return this.data.length > this.offset;
    }
    bytes(size: number): number {
        let result = 0;
        let factor = 1;
        const start = this.offset;
        const end = (this.offset += size);
        for (let i = start; i < end; i++) {
            result += factor * Base91.DEC_TABLE[this.data.charCodeAt(i)];
            factor *= 0x5b;
        }
        return result;
    }
    bytes2() {
        this.offset += 2;
        return (
            Base91.DEC_TABLE[this.data.charCodeAt(this.offset - 2)] +
            0x5b * Base91.DEC_TABLE[this.data.charCodeAt(this.offset - 1)]
        );
    }
    flexInt() {
        let result = 0;
        let factor = 1;
        let size = 0;
        while (size < 5) {
            const next = this.data.charCodeAt(this.offset + size);
            if (next == Base91.SeperatorCode) {
                size++;
                break;
            }
            result += factor * Base91.DEC_TABLE[next];
            factor *= 0x5b;
            size++;
        }
        this.offset += size;
        return result;
    }
    remaining() {
        return this.data.substring(this.offset);
    }
    static encode(data: number, bytes: number) {
        let output = '';
        for (let i = 0; i < bytes; i++) {
            output += Base91.ENC_TABLE[data % 91];
            data = Math.floor(data / 0x5b);
        }
        return output;
    }
    static SeperatorCode = 0x2d;
    static Seperator = '-';
    static SeperatorFlexString = '#';
    static DEC_TABLE = [
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x49,
        0x3e,
        0x5b,
        0x3f,
        0x40,
        0x41,
        0x42,
        90,
        0x43,
        0x44,
        0x45,
        70,
        0x47,
        0x5b,
        0x48,
        0x5b,
        0x34,
        0x35,
        0x36,
        0x37,
        0x38,
        0x39,
        0x3a,
        0x3b,
        60,
        0x3d,
        0x4a,
        0x4b,
        0x4c,
        0x4d,
        0x4e,
        0x4f,
        80,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0x10,
        0x11,
        0x12,
        0x13,
        20,
        0x15,
        0x16,
        0x17,
        0x18,
        0x19,
        0x51,
        0x5b,
        0x52,
        0x53,
        0x54,
        0x55,
        0x1a,
        0x1b,
        0x1c,
        0x1d,
        30,
        0x1f,
        0x20,
        0x21,
        0x22,
        0x23,
        0x24,
        0x25,
        0x26,
        0x27,
        40,
        0x29,
        0x2a,
        0x2b,
        0x2c,
        0x2d,
        0x2e,
        0x2f,
        0x30,
        0x31,
        50,
        0x33,
        0x56,
        0x57,
        0x58,
        0x59,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
        0x5b,
    ];
    static ENC_TABLE = [
        'A',
        'B',
        'C',
        'D',
        'E',
        'F',
        'G',
        'H',
        'I',
        'J',
        'K',
        'L',
        'M',
        'N',
        'O',
        'P',
        'Q',
        'R',
        'S',
        'T',
        'U',
        'V',
        'W',
        'X',
        'Y',
        'Z',
        'a',
        'b',
        'c',
        'd',
        'e',
        'f',
        'g',
        'h',
        'i',
        'j',
        'k',
        'l',
        'm',
        'n',
        'o',
        'p',
        'q',
        'r',
        's',
        't',
        'u',
        'v',
        'w',
        'x',
        'y',
        'z',
        '0',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        '!',
        '#',
        '$',
        '%',
        '&',
        '(',
        ')',
        '*',
        '+',
        ',',
        '.',
        ' ',
        ':',
        ';',
        '<',
        '=',
        '>',
        '?',
        '@',
        '[',
        ']',
        '^',
        '_',
        '`',
        '{',
        '|',
        '}',
        '~',
        "'",
    ];
}
